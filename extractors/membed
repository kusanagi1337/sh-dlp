#!/bin/sh

#script for scraping membed links..

#requires "openssl" dependency
base_url="https://membed.net"
agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36"

#url taken from arguments
sub_url=$(printf "%s" "$*" | cut -d'/' -f5)

#check if id is empty
[ -z "$sub_url" ] && printf "\033[1;31m[ membed ] Invalid link\n" && exit 1

printf "\033[1;36m[ membed ] [ $sub_url ] Downloading webpage\n"
refr=$(curl -A "$agent" -s "$base_url/videos/$sub_url" | sed -nE 's/.*iframe src="(.*)" al.*/\1/p')

#extracting subtitle link if it contains subtitles
subtitle=$(printf "%s" "$refr" | sed -nE 's_.*sub=([^&]*).*_\1_p' | base64 -d)

#extracting mirror site links, and scrape them after scraping this
resp="$(curl -A "$agent" -s "https:$refr" | sed -nE 's/.*data-status="1".*data-video="(.*)">.*/\1/p')"

#key and iv for openssl
iv="39323235363739303833393631383538"
secret_key="3235373432353332353932313338343936373434363635383739383833323831"

#ajax building for fetching video links
ajax=$(printf "%s" "$refr" | sed -nE 's/.*id=([^&]*)&.*/\1/p' | openssl enc -e -aes256 -K "$secret_key" -iv "$iv" -a)

printf "\033[1;36m[ membed ] [ $sub_url ] Fetching video url\n"
#fetching video links, then decrypting it using openssl
video_url=$(curl -A "$agent" -s -H "X-Requested-With:XMLHttpRequest" "${base_url}/encrypt-ajax.php?id=${ajax}" | sed -e 's/{"data":"//' -e 's/"}/\n/' -e 's/\\//g' | base64 -d | openssl enc -d -aes256 -K "$secret_key" -iv "$iv" | tr -d '\\' | sed -nE 's_.*file":"([^"]*)".*source.*_\1_p')

if [ -n "$video_url" ];then
    printf "\033[1;32m Name >>\033[0m %s\n" "$sub_url"
    printf "\033[1;32m referer >>\033[0m %s\n" "$*"
    printf "\033[1;32m URL >>\033[0m %s\n" "$video_url"
    [ -z "$subtitle" ] || printf "\033[1;32m Subtitle_url >>\033[0m %s\n" "https://msubload.com/sub$subtitle"
    printf "\n"
else
    printf "\033[1;31m[ membed ] [ $sub_url ] Cannot fetch final url\033[0m\n\n"
fi

fb_id=$(printf "%s" "$resp" | sed -n '/fembed/p;/embedsito/p')
dood_id=$(printf "%s" "$resp" | sed -n '/dood/p')

[ -z "$fb_id" ] || $(printf "$0" | sed 's_/[^/]*$__')/fembed "$fb_id"
[ -z "$dood_id" ] || $(printf "$0" | sed 's_/[^/]*$__')/doodstream "$dood_id"
